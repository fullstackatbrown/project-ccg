---
import Layout from '../layouts/Layout.astro';
import Navbar from '../components/common/Navbar.astro';
import Footer from '../components/common/Footer.astro';
import ServicesSection from '../components/services/ServicesSection.astro';
import ProcessSection from '../components/services/ProcessSection.astro';
import ValuesSection from '../components/services/ValuesSection.astro';
import AnnualReportSection from '../components/common/AnnualReportSection.astro';
import ProjectsSection from '../components/services/ProjectsSection.astro';
import '../styles/global.css';
import { fetchClients } from '../../contentfulStatic.js';

const projects = await fetchClients();
const base = import.meta.env.BASE_URL;
---

<Layout>
  <div class="flex flex-col min-h-screen">
    <Navbar></Navbar>
  
    <!-- Hero Section with Parallax -->
    <section class="relative w-full h-[85vh] flex items-center justify-center overflow-hidden">
      <!-- Background Image with Parallax -->
      <div id="parallax-bg" class="absolute w-full h-full transform scale-110">
        <img 
          src={`${base}/assets/images/quietgreen.jpg`}
          alt="group photo" 
          class="w-full h-full object-cover object-center md:object-[50%_20%] transition-all duration-1000"
        >
      </div>

      <!-- Dark Gradient Overlay -->
      <div class="absolute w-full h-full bg-gradient-to-t from-[#0c1445] via-[#0c1445cc] to-[#0c144566]"></div>

      <!-- Overlay Text with Animated Entry -->
      <div class="absolute inset-0 flex flex-col items-start justify-end p-8 md:p-16 lg:p-24 text-content-animation">
        <div class="slide-up-animation">
          <h1 class="text-6xl md:text-7xl lg:text-8xl font-bold text-white mb-6" style="font-family: 'Almarai', sans-serif;">
              Our Services
          </h1>
          <p class="text-xl md:text-2xl text-white opacity-90 max-w-2xl leading-relaxed">
            Shape your future in consulting with Brown's premier student consulting organization
          </p>
          <a href="#learn-more" class="mt-8 inline-flex items-center px-8 py-3 bg-gradient-to-r from-[#D32F2F] to-[#B71C1C] text-white font-medium rounded-full hover:shadow-lg transform hover:-translate-y-1 transition-all duration-300">
            Learn More
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 ml-2 animate-bounce" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 14l-7 7m0 0l-7-7m7 7V3" />
            </svg>
          </a>
        </div>
      </div>
    </section>

    <ValuesSection />
    <ServicesSection />
    <ProjectsSection />
    <ProcessSection />
    <AnnualReportSection />

    <Footer></Footer>
  </div>
</Layout>

<style>
  /* Hero section parallax effect */
  .slide-up-animation {
    animation: slideUp 1.2s forwards;
    animation-delay: 0.5s;
    opacity: 0;
    transform: translateY(50px);
  }
  
  @keyframes slideUp {
    0% {
      opacity: 0;
      transform: translateY(50px);
    }
    100% {
      opacity: 1;
      transform: translateY(0);
    }
  }
</style>

<script>
  document.addEventListener("DOMContentLoaded", function() {
    // Parallax effect for hero section
    const parallaxBg = document.getElementById('parallax-bg');
    
    window.addEventListener('scroll', function() {
      if (parallaxBg) {
        const scrollPosition = window.scrollY;
        const translateY = scrollPosition * 0.4;
        parallaxBg.style.transform = `translateY(${translateY}px) scale(1.1)`;
      }
    });

    // Intersection Observer for fade-in animations
    const fadeElements = document.querySelectorAll('.fade-in');
    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          entry.target.classList.add('visible');
          observer.unobserve(entry.target); // Stop observing once visible
        }
      });
    }, {
      threshold: 0.15,
      rootMargin: '0px 0px -100px 0px'
    });

    fadeElements.forEach(element => {
      observer.observe(element);
    });
  });
</script>