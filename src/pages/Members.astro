---
import Layout from '../layouts/Layout.astro';
import Navbar from '../components/Navbar.astro';
import Footer from '../components/Footer.astro';
import '../styles/global.css';
import { contentfulClient } from "../lib/contentful";

const entries = await contentfulClient.getEntries({
  content_type: "member"
});
const entries2 = await contentfulClient.getEntries({
  content_type: "images"
});

const headerImage = entries2.items
  .filter(entry => entry.fields.title === "Team")[0]
  ?.fields?.images?.map(image => image.fields?.file?.url) || [];

const members = entries.items.map(entry => ({
  memberName: entry.fields.memberName,
  position: entry.fields.position,
  classYear: entry.fields.classYear,
  bibliography: entry.fields.bibliography,
  profileImage: entry.fields.profileImage?.fields?.file?.url || '',
  contactInformation: entry.fields.contactInformation,
  linkedIn: entry.fields.linkedIn
}));

const leadershipPositions = ['co-president (projects)', 'sourcing committee lead', 'project leader','co-president (internal development)','project manager'];
const leadershipMembers = members.filter(member => 
  typeof member.position === 'string' && leadershipPositions.includes(member.position.toLowerCase())
);
const otherMembers = members.filter(member => 
  typeof member.position === 'string' && !leadershipPositions.includes(member.position?.toLowerCase())
);
---

<Layout>
	<div class="flex flex-col ">
    <Navbar />

		<!-- Hero Section -->
		<section class="relative w-full h-[60vh] flex items-center justify-center overflow-hidden rounded-b-4xl">
			<!-- Background Image -->
			<img 
				src={headerImage[0]}
				alt="Team Image" 
				class="relative min-w-full h-full object-cover object-center md:object-[50%_20%] scale-100 md:scale-110 lg:scale-100 transition-all duration-500"
			>

			<!-- Dark Overlay (same size as section) -->
			<div class="absolute w-full h-full bg-black opacity-40"></div>

			<!-- Overlay Text -->
			<div class="absolute bottom-4 left-4 text-white text-9xl font-bold fade-in" style="font-family: 'Almarai', sans-serif;">
				Our Team
			</div>
		</section>
</Layout>
  
  <section class="members-section">
      <h2 class="font-bond text-5xl text-center">Leadership</h2>
      <div class="members-grid" id="leadership">
        {leadershipMembers.map((member, index) => (
          <article class="member-card" data-member-index={index} data-member-type="leadership">
            <div class="image-container">
              {member.profileImage && (
                <img 
                  src={member.profileImage} 
                  alt={`${member.memberName}'s profile photo`}
                  class="member-image"
                />
              )}
            </div>
            <div class="member-info">
              <h2>{member.memberName}</h2>
              <p>{member.position}</p>
              <p>Class Year: {member.classYear}</p>
            </div>
          </article>
        ))}
      </div>
      <h2 class="font-bond text-5xl text-center">Consultants</h2>
      <div class="members-grid" id="members">
        {otherMembers.map((member, index) => (
          <article class="member-card" data-member-index={index} data-member-type="other">
            <div class="image-container">
              {member.profileImage && (
                <img 
                  src={member.profileImage} 
                  alt={`${member.memberName}'s profile photo`}
                  class="member-image"
                />
              )}
            </div>
            <div class="member-info">
              <h2>{member.memberName}</h2>
              <p>{member.position}</p>
              <p>Class Year: {member.classYear}</p>
            </div>
          </article>
        ))}
      </div>
  </section>

  <div id="modal" class="modal">
    <div class="modal-content">
      <span class="close">&times;</span>
      <div id="modal-member-content"></div>
    </div>
  </div>

  <Footer />
</Layout>
<style>
  .members-section {
    padding: 2rem 0;
    justify-content: center;
  }
  .members-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
    gap: 2rem;
    padding: 2rem;
    justify-content: center; /* Centers grid items */
    max-width: 1300px; /* Prevents grid from stretching too wide */
    margin: 0 auto; /* Centers the grid within its container */
  }

  .member-card {
    display: flex;
    flex-direction: column;
    height: 550px;
    border-radius: 8px;
    box-shadow: 0 2px 4px rgba(0, 0, 1, 0.1);
    cursor: pointer;
    transition: transform 0.2s;
    overflow: hidden;
  }

  .member-card:hover {
    transform: scale(1.02);
    box-shadow: 0 8px 8px rgba(0, 0, 1, 0.1);
  }

  .image-container {
    height: 80%;
    overflow: hidden;
    position: relative;
  }

  .member-image {
    width: 100%;
    height: 100%;
    object-fit: cover;
    margin: 0;
  }

  .member-info {
    padding: 0.5rem;
    margin-top: 0.5rem;
    height: 15%;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
  }

  .member-info h2 {
    margin: 0;
    font-size: 1.2rem;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  }

  .member-info p {
    margin: 0.1rem;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  }

  .modal {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.7);
    z-index: 1000;
  }

  .modal-content {
    position: relative;
    background-color: white;
    margin: 15% auto;
    padding: 20px;
    width: 70%;
    max-width: 700px;
    border-radius: 8px;
    max-height: 70vh;
    overflow-y: auto;
  }

  .close {
    position: absolute;
    right: 20px;
    top: 10px;
    font-size: 28px;
    font-weight: bold;
    cursor: pointer;
  }

  .close:hover {
    color: #666;
  }

  img {
    width: 100%;
    height: auto;
    border-radius: 4px;
    margin: 1rem 0;
  }

  a {
    display: inline-block;
    margin-top: 1rem;
    color: #0077b5;
    text-decoration: none;
  }

  a:hover {
    text-decoration: underline;
  }
</style>

<script define:vars={{ leadershipMembers, otherMembers }}>
  const modal = document.getElementById('modal');
  const modalContent = document.getElementById('modal-member-content');
  const closeBtn = document.querySelector('.close');

  document.querySelectorAll('.member-card').forEach(card => {
    card.addEventListener('click', () => {
      const index = parseInt(card.dataset.memberIndex);
      const memberType = card.dataset.memberType;
      const member = memberType === 'leadership' ? leadershipMembers[index] : otherMembers[index];
      
      modalContent.innerHTML = `
        <h2>${member.memberName}</h2>
        <p>Position: ${member.position}</p>
        <p>Class Year: ${member.classYear}</p>
        <p>Bibliography: ${member.bibliography}</p>
        ${member.profileImage ? `<img src="${member.profileImage}" alt="${member.memberName}" />` : ''}
        <p>Contact: ${member.contactInformation}</p>
        ${member.linkedIn ? `<a href="${member.linkedIn}" target="_blank">LinkedIn Profile</a>` : ''}
      `;
      
      modal.style.display = 'block';
      document.body.style.overflow = 'hidden';
    });
  });

  closeBtn.addEventListener('click', () => {
    modal.style.display = 'none';
    document.body.style.overflow = 'auto';
  });

  window.addEventListener('click', (event) => {
    if (event.target === modal) {
      modal.style.display = 'none';
      document.body.style.overflow = 'auto';
    }
  });
</script>