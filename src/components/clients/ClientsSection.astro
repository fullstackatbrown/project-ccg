---
import { fetchClients } from '../../../contentfulStatic.js';

const clients = (await fetchClients()).filter(
  client => client.summary && client.summary.trim() !== ""
);
---

<section id="clients-section" class="w-full py-24 bg-gradient-to-b from-white to-[#F5F7FA] opacity-0 translate-y-5 transition-all duration-700 ease-out">
  <div class="container mx-auto px-4">
    <h1 class="text-5xl md:text-6xl font-bold mb-8 text-[#0B144A] text-center" style="font-family: 'arimo', sans-serif;">Selected Past Engagements</h1>

    <div class="flex items-center justify-center mb-12 mt-4">
      <div class="w-12 h-1 bg-[#D32F2F]"></div>
      <div class="w-3 h-3 rounded-full bg-[#D32F2F] ml-1"></div>
      <div class="w-12 h-1 bg-[#D32F2F] ml-1"></div>
    </div>

    <div class="grid grid-cols-4 gap-8">
      {clients.map(client => (
        <div class="relative group bg-white rounded-lg shadow hover:shadow-lg transition duration-300 overflow-hidden aspect-square flex items-center justify-center">
          <div class="bg-[#0C1445] w-full h-full flex items-center justify-center">
            <img 
              src={client.logo} 
              alt={client.companyName} 
              class="w-full h-full object-contain p-4 filter grayscale brightness-0 invert"
            />
          </div>

          <div class="absolute inset-0 flex flex-col justify-center items-center text-center px-6 opacity-0 group-hover:opacity-100 transition-opacity duration-300 bg-[#D32F2F]/98 text-white">
            <h3 class="text-lg font-semibold">{client.companyName}</h3>
            <p class="text-sm mt-2">{client.summary}</p>
          </div>
        </div>
      ))}
    </div>
  </div>
</section>

<script type="module">
  document.addEventListener("DOMContentLoaded", () => {
    const section = document.getElementById("clients-section");

    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          section.classList.remove("opacity-0", "translate-y-5");
          section.classList.add("opacity-100", "translate-y-0");
          observer.unobserve(entry.target);
        }
      });
    }, {
      threshold: 0.1,
      rootMargin: "0px 0px -50px 0px"
    });

    observer.observe(section);
  });
</script>

